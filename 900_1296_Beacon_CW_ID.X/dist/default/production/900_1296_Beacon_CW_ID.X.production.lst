

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Aug 24 09:54:35 2023

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	12F683
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 29/04/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC12F683 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  008C                     	;# 
    86  008E                     	;# 
    87  008F                     	;# 
    88  0090                     	;# 
    89  0092                     	;# 
    90  0095                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0096                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  000A                     	;# 
   109  000B                     	;# 
   110  000C                     	;# 
   111  000E                     	;# 
   112  000E                     	;# 
   113  000F                     	;# 
   114  0010                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0013                     	;# 
   119  0014                     	;# 
   120  0015                     	;# 
   121  0018                     	;# 
   122  0019                     	;# 
   123  001A                     	;# 
   124  001E                     	;# 
   125  001F                     	;# 
   126  0081                     	;# 
   127  0085                     	;# 
   128  008C                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0092                     	;# 
   133  0095                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0096                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  009F                     	;# 
   145                           
   146                           	psect	idataBANK0
   147  0715                     __pidataBANK0:
   148                           
   149                           ;initializer for _MorseCode
   150  0715  3461               	retlw	low (((STR_17+2)-__stringbase)| (0+32768))
   151  0716  3449               	retlw	low (((STR_34+1)-__stringbase)| (0+32768))
   152  0717  346E               	retlw	low ((STR_3-__stringbase)| (0+32768))
   153  0718  3444               	retlw	low (((STR_35+2)-__stringbase)| (0+32768))
   154  0719  343A               	retlw	low (((STR_36+4)-__stringbase)| (0+32768))
   155  071A  343D               	retlw	low (((STR_37+1)-__stringbase)| (0+32768))
   156  071B  3438               	retlw	low (((STR_36+2)-__stringbase)| (0+32768))
   157  071C  344F               	retlw	low (((STR_33+1)-__stringbase)| (0+32768))
   158  071D  3445               	retlw	low (((STR_35+3)-__stringbase)| (0+32768))
   159  071E  3425               	retlw	low (((STR_29+1)-__stringbase)| (0+32768))
   160  071F  3460               	retlw	low (((STR_17+1)-__stringbase)| (0+32768))
   161  0720  3473               	retlw	low ((STR_12-__stringbase)| (0+32768))
   162  0721  341B               	retlw	low (((STR_27+3)-__stringbase)| (0+32768))
   163  0722  3439               	retlw	low (((STR_36+3)-__stringbase)| (0+32768))
   164  0723  341A               	retlw	low (((STR_27+2)-__stringbase)| (0+32768))
   165  0724  3469               	retlw	low ((STR_16-__stringbase)| (0+32768))
   166  0725  345F               	retlw	low ((STR_17-__stringbase)| (0+32768))
   167  0726  346F               	retlw	low (((STR_3+1)-__stringbase)| (0+32768))
   168  0727  344A               	retlw	low (((STR_34+2)-__stringbase)| (0+32768))
   169  0728  341C               	retlw	low (((STR_27+4)-__stringbase)| (0+32768))
   170  0729  3465               	retlw	low (((STR_24+1)-__stringbase)| (0+32768))
   171  072A  3431               	retlw	low (((STR_31+1)-__stringbase)| (0+32768))
   172  072B  345B               	retlw	low (((STR_25+1)-__stringbase)| (0+32768))
   173  072C  3464               	retlw	low ((STR_24-__stringbase)| (0+32768))
   174  072D  345A               	retlw	low ((STR_25-__stringbase)| (0+32768))
   175  072E  3443               	retlw	low (((STR_35+1)-__stringbase)| (0+32768))
   176                           
   177                           ;initializer for _Numbers
   178  072F  3418               	retlw	low ((STR_27-__stringbase)| (0+32768))
   179  0730  341E               	retlw	low ((STR_28-__stringbase)| (0+32768))
   180  0731  3424               	retlw	low ((STR_29-__stringbase)| (0+32768))
   181  0732  342A               	retlw	low ((STR_30-__stringbase)| (0+32768))
   182  0733  3430               	retlw	low ((STR_31-__stringbase)| (0+32768))
   183  0734  3454               	retlw	low ((STR_32-__stringbase)| (0+32768))
   184  0735  344E               	retlw	low ((STR_33-__stringbase)| (0+32768))
   185  0736  3448               	retlw	low ((STR_34-__stringbase)| (0+32768))
   186  0737  3442               	retlw	low ((STR_35-__stringbase)| (0+32768))
   187  0738  3436               	retlw	low ((STR_36-__stringbase)| (0+32768))
   188                           
   189                           ;initializer for _DitDuration
   190  0739  3446               	retlw	70
   191  073A  3400               	retlw	0
   192                           
   193                           	psect	strings
   194  0001                     __pstrings:
   195  0001                     stringtab:
   196  0001                     __stringtab:
   197  0001                     stringcode:	
   198                           ;	String table - string pointers are 1 byte each
   199                           
   200  0001                     stringdir:
   201  0001  3000               	movlw	high stringdir
   202  0002  008A               	movwf	10
   203  0003  0804               	movf	4,w
   204  0004  0A84               	incf	4,f
   205  0005  0782               	addwf	2,f
   206  0006                     __stringbase:
   207  0006  3400               	retlw	0
   208  0007                     __end_of__stringtab:
   209  0007                     _Tx_String:
   210  0007  3456               	retlw	86
   211  0008  3456               	retlw	86
   212  0009  3456               	retlw	86
   213  000A  3420               	retlw	32
   214  000B  3444               	retlw	68
   215  000C  3445               	retlw	69
   216  000D  3420               	retlw	32
   217  000E  3456               	retlw	86
   218  000F  3445               	retlw	69
   219  0010  3433               	retlw	51
   220  0011  3457               	retlw	87
   221  0012  3443               	retlw	67
   222  0013  3443               	retlw	67
   223  0014  342F               	retlw	47
   224  0015  3442               	retlw	66
   225  0016  3420               	retlw	32
   226  0017  3446               	retlw	70
   227  0018  344E               	retlw	78
   228  0019  3431               	retlw	49
   229  001A  3435               	retlw	53
   230  001B  3458               	retlw	88
   231  001C  3449               	retlw	73
   232  001D  3400               	retlw	0
   233  001E                     __end_of_Tx_String:
   234  0005                     _GPIO	set	5
   235  0018                     _WDTCON	set	24
   236  001A                     _CMCON1	set	26
   237  0019                     _CMCON0	set	25
   238  001F                     _ADCON0	set	31
   239  0015                     _CCP1CON	set	21
   240  0012                     _T2CON	set	18
   241  0010                     _T1CON	set	16
   242  000C                     _PIR1	set	12
   243  002C                     _GP4	set	44
   244  0085                     _TRISIO	set	133
   245  0099                     _VRCON	set	153
   246  009F                     _ANSEL	set	159
   247  008F                     _OSCCON	set	143
   248  0095                     _WPU	set	149
   249  0081                     _OPTION_REG	set	129
   250  008C                     _PIE1	set	140
   251  0096                     _IOC	set	150
   252  001E                     STR_27:
   253  001E  342D               	retlw	45	;'-'
   254  001F  342D               	retlw	45	;'-'
   255  0020  342D               	retlw	45	;'-'
   256  0021  342D               	retlw	45	;'-'
   257  0022  342D               	retlw	45	;'-'
   258  0023  3400               	retlw	0
   259  0024                     STR_28:
   260  0024  342E               	retlw	46	;'.'
   261  0025  342D               	retlw	45	;'-'
   262  0026  342D               	retlw	45	;'-'
   263  0027  342D               	retlw	45	;'-'
   264  0028  342D               	retlw	45	;'-'
   265  0029  3400               	retlw	0
   266  002A                     STR_29:
   267  002A  342E               	retlw	46	;'.'
   268  002B  342E               	retlw	46	;'.'
   269  002C  342D               	retlw	45	;'-'
   270  002D  342D               	retlw	45	;'-'
   271  002E  342D               	retlw	45	;'-'
   272  002F  3400               	retlw	0
   273  0030                     STR_30:
   274  0030  342E               	retlw	46	;'.'
   275  0031  342E               	retlw	46	;'.'
   276  0032  342E               	retlw	46	;'.'
   277  0033  342D               	retlw	45	;'-'
   278  0034  342D               	retlw	45	;'-'
   279  0035  3400               	retlw	0
   280  0036                     STR_31:
   281  0036  342E               	retlw	46	;'.'
   282  0037  342E               	retlw	46	;'.'
   283  0038  342E               	retlw	46	;'.'
   284  0039  342E               	retlw	46	;'.'
   285  003A  342D               	retlw	45	;'-'
   286  003B  3400               	retlw	0
   287  003C                     STR_36:
   288  003C  342D               	retlw	45	;'-'
   289  003D  342D               	retlw	45	;'-'
   290  003E  342D               	retlw	45	;'-'
   291  003F  342D               	retlw	45	;'-'
   292  0040  342E               	retlw	46	;'.'
   293  0041  3400               	retlw	0
   294  0042                     STR_37:
   295  0042  342D               	retlw	45	;'-'
   296  0043  342E               	retlw	46	;'.'
   297  0044  342E               	retlw	46	;'.'
   298  0045  342D               	retlw	45	;'-'
   299  0046  342E               	retlw	46	;'.'
   300  0047  3400               	retlw	0
   301  0048                     STR_35:
   302  0048  342D               	retlw	45	;'-'
   303  0049  342D               	retlw	45	;'-'
   304  004A  342D               	retlw	45	;'-'
   305  004B  342E               	retlw	46	;'.'
   306  004C  342E               	retlw	46	;'.'
   307  004D  3400               	retlw	0
   308  004E                     STR_34:
   309  004E  342D               	retlw	45	;'-'
   310  004F  342D               	retlw	45	;'-'
   311  0050  342E               	retlw	46	;'.'
   312  0051  342E               	retlw	46	;'.'
   313  0052  342E               	retlw	46	;'.'
   314  0053  3400               	retlw	0
   315  0054                     STR_33:
   316  0054  342D               	retlw	45	;'-'
   317  0055  342E               	retlw	46	;'.'
   318  0056  342E               	retlw	46	;'.'
   319  0057  342E               	retlw	46	;'.'
   320  0058  342E               	retlw	46	;'.'
   321  0059  3400               	retlw	0
   322  005A                     STR_32:
   323  005A  342E               	retlw	46	;'.'
   324  005B  342E               	retlw	46	;'.'
   325  005C  342E               	retlw	46	;'.'
   326  005D  342E               	retlw	46	;'.'
   327  005E  342E               	retlw	46	;'.'
   328  005F  3400               	retlw	0
   329  0060                     STR_25:
   330  0060  342D               	retlw	45	;'-'
   331  0061  342E               	retlw	46	;'.'
   332  0062  342D               	retlw	45	;'-'
   333  0063  342D               	retlw	45	;'-'
   334  0064  3400               	retlw	0
   335  0065                     STR_17:
   336  0065  342D               	retlw	45	;'-'
   337  0066  342D               	retlw	45	;'-'
   338  0067  342E               	retlw	46	;'.'
   339  0068  342D               	retlw	45	;'-'
   340  0069  3400               	retlw	0
   341  006A                     STR_24:
   342  006A  342D               	retlw	45	;'-'
   343  006B  342E               	retlw	46	;'.'
   344  006C  342E               	retlw	46	;'.'
   345  006D  342D               	retlw	45	;'-'
   346  006E  3400               	retlw	0
   347  006F                     STR_16:
   348  006F  342E               	retlw	46	;'.'
   349  0070  342D               	retlw	45	;'-'
   350  0071  342D               	retlw	45	;'-'
   351  0072  342E               	retlw	46	;'.'
   352  0073  3400               	retlw	0
   353  0074                     STR_3:
   354  0074  342D               	retlw	45	;'-'
   355  0075  342E               	retlw	46	;'.'
   356  0076  342D               	retlw	45	;'-'
   357  0077  342E               	retlw	46	;'.'
   358  0078  3400               	retlw	0
   359  0079                     STR_12:
   360  0079  342E               	retlw	46	;'.'
   361  007A  342D               	retlw	45	;'-'
   362  007B  342E               	retlw	46	;'.'
   363  007C  342E               	retlw	46	;'.'
   364  007D  3400               	retlw	0
   365  0022                     
   366                           	psect	cinit
   367  07F3                     start_initialization:	
   368                           ; #config settings
   369                           
   370  07F3                     __initialization:
   371                           
   372                           ; Initialize objects allocated to BANK0
   373  07F3  1383               	bcf	3,7	;select IRP bank0
   374  07F4  3046               	movlw	low (__pdataBANK0+38)
   375  07F5  00FD               	movwf	btemp+-1
   376  07F6  3007               	movlw	high __pidataBANK0
   377  07F7  00FE               	movwf	btemp
   378  07F8  3015               	movlw	low __pidataBANK0
   379  07F9  00FF               	movwf	btemp+1
   380  07FA  3020               	movlw	low __pdataBANK0
   381  07FB  0084               	movwf	4
   382  07FC  2692               	fcall	init_ram0
   383                           
   384                           ; Clear objects allocated to BANK0
   385  07FD  01CF               	clrf	__pbssBANK0& (0+127)
   386  07FE                     end_of_initialization:	
   387                           ;End of C runtime variable initialization code
   388                           
   389  07FE                     __end_of__initialization:
   390  07FE  0183               	clrf	3
   391  07FF  2E8A               	ljmp	_main	;jump to C main() function
   392                           
   393                           	psect	bssBANK0
   394  004F                     __pbssBANK0:
   395  004F                     _TxStr_pos:
   396  004F                     	ds	1
   397                           
   398                           	psect	dataBANK0
   399  0020                     __pdataBANK0:
   400  0020                     _MorseCode:
   401  0020                     	ds	26
   402  003A                     _Numbers:
   403  003A                     	ds	10
   404  0044                     _DitDuration:
   405  0044                     	ds	2
   406                           
   407                           	psect	inittext
   408  068E                     init_fetch0:	
   409                           ;	Called with low address in FSR and high address in W
   410                           
   411  068E  087E               	movf	btemp,w
   412  068F  008A               	movwf	10
   413  0690  087F               	movf	btemp+1,w
   414  0691  0082               	movwf	2
   415  0692                     init_ram0:	
   416                           ;Called with:
   417                           ;	high address of idata address in btemp 
   418                           ;	low address of idata address in btemp+1 
   419                           ;	low address of data in FSR
   420                           ;	high address + 1 of data in btemp-1
   421                           
   422  0692  268E               	fcall	init_fetch0
   423  0693  0080               	movwf	0
   424  0694  0A84               	incf	4,f
   425  0695  0804               	movf	4,w
   426  0696  067D               	xorwf	btemp+-1,w
   427  0697  1903               	btfsc	3,2
   428  0698  3400               	retlw	0
   429  0699  0AFF               	incf	btemp+1,f
   430  069A  1903               	btfsc	3,2
   431  069B  0AFE               	incf	btemp,f
   432  069C  2E92               	goto	init_ram0
   433                           
   434                           	psect	cstackCOMMON
   435  0070                     __pcstackCOMMON:
   436  0070                     ?_KeyDown:
   437  0070                     ??_KeyDown:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_KeyUp:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ??_KeyUp:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_setup:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_Send_ID_Cycle:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_main:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?___wmul:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ___wmul@multiplier:	
   459                           ; 2 bytes @ 0x0
   460                           
   461                           
   462                           ; 2 bytes @ 0x0
   463  0070                     	ds	2
   464  0072                     ___wmul@multiplicand:
   465                           
   466                           ; 2 bytes @ 0x2
   467  0072                     	ds	2
   468  0074                     ??___wmul:
   469  0074                     ___wmul@product:	
   470                           ; 1 bytes @ 0x4
   471                           
   472                           
   473                           ; 2 bytes @ 0x4
   474  0074                     	ds	2
   475  0076                     ?_delay_ms:
   476  0076                     delay_ms@delay:	
   477                           ; 1 bytes @ 0x6
   478                           
   479                           
   480                           ; 2 bytes @ 0x6
   481  0076                     	ds	2
   482  0078                     ??_delay_ms:
   483                           
   484                           ; 1 bytes @ 0x8
   485  0078                     	ds	1
   486  0079                     delay_ms@i:
   487                           
   488                           ; 2 bytes @ 0x9
   489  0079                     	ds	2
   490  007B                     ?_SendDitDah:
   491  007B                     ??_setup:	
   492                           ; 1 bytes @ 0xB
   493                           
   494  007B                     SendDitDah@ditdelay:	
   495                           ; 1 bytes @ 0xB
   496                           
   497                           
   498                           ; 2 bytes @ 0xB
   499  007B                     	ds	2
   500  007D                     ??_SendDitDah:
   501  007D                     SendDitDah@DitDah_data:	
   502                           ; 1 bytes @ 0xD
   503                           
   504                           
   505                           ; 1 bytes @ 0xD
   506  007D                     	ds	1
   507  007E                     ??_Send_ID_Cycle:
   508  007E                     ??_main:	
   509                           ; 1 bytes @ 0xE
   510                           
   511                           
   512                           	psect	cstackBANK0
   513  0046                     __pcstackBANK0:	
   514                           ; 1 bytes @ 0xE
   515                           
   516  0046                     ?_SendCharacter:
   517  0046                     SendCharacter@ditdelay:	
   518                           ; 1 bytes @ 0x0
   519                           
   520                           
   521                           ; 2 bytes @ 0x0
   522  0046                     	ds	2
   523  0048                     ??_SendCharacter:
   524                           
   525                           ; 1 bytes @ 0x2
   526  0048                     	ds	1
   527  0049                     SendCharacter@i:
   528                           
   529                           ; 1 bytes @ 0x3
   530  0049                     	ds	1
   531  004A                     SendCharacter@Character:
   532                           
   533                           ; 1 bytes @ 0x4
   534  004A                     	ds	1
   535  004B                     ?_Send_CW_Mess:
   536  004B                     Send_CW_Mess@ditdelay:	
   537                           ; 1 bytes @ 0x5
   538                           
   539                           
   540                           ; 2 bytes @ 0x5
   541  004B                     	ds	2
   542  004D                     ??_Send_CW_Mess:
   543                           
   544                           ; 1 bytes @ 0x7
   545  004D                     	ds	1
   546  004E                     Send_CW_Mess@TxCharacter:
   547                           
   548                           ; 1 bytes @ 0x8
   549  004E                     	ds	1
   550                           
   551                           	psect	maintext
   552  068A                     __pmaintext:	
   553 ;;
   554 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   555 ;;
   556 ;; *************** function _main *****************
   557 ;; Defined at:
   558 ;;		line 209 in file "main.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : B00/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1
   572 ;;      Params:         0       0       0
   573 ;;      Locals:         0       0       0
   574 ;;      Temps:          0       0       0
   575 ;;      Totals:         0       0       0
   576 ;;Total ram usage:        0 bytes
   577 ;; Hardware stack levels required when called:    5
   578 ;; This function calls:
   579 ;;		_Send_ID_Cycle
   580 ;;		_setup
   581 ;; This function is called by:
   582 ;;		Startup code after reset
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function _main
   588  068A                     _main:
   589  068A                     l919:	
   590                           ;incstack = 0
   591                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   592                           
   593  068A  2764               	fcall	_setup
   594  068B                     l921:
   595  068B  269D               	fcall	_Send_ID_Cycle
   596  068C  2E8B               	goto	l921
   597  068D  2800               	ljmp	start
   598  068E                     __end_of_main:
   599                           
   600                           	psect	text1
   601  0764                     __ptext1:	
   602 ;; *************** function _setup *****************
   603 ;; Defined at:
   604 ;;		line 165 in file "main.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0, pclath, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1
   618 ;;      Params:         0       0       0
   619 ;;      Locals:         0       0       0
   620 ;;      Temps:          0       0       0
   621 ;;      Totals:         0       0       0
   622 ;;Total ram usage:        0 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    1
   625 ;; This function calls:
   626 ;;		_delay_ms
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           
   633                           ;psect for function _setup
   634  0764                     _setup:
   635  0764                     l881:	
   636                           ;incstack = 0
   637                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   638                           
   639                           
   640                           ;main.c: 168:   delay_ms(400);
   641  0764  1283               	bcf	3,5	;RP0=0, select bank0
   642  0765  018C               	clrf	12	;volatile
   643                           
   644                           ;main.c: 169: }
   645  0766  1683               	bsf	3,5	;RP0=1, select bank1
   646  0767  0196               	clrf	22	;volatile
   647                           
   648                           ;main.c: 170: 
   649  0768  018C               	clrf	12	;volatile
   650  0769                     l883:
   651                           
   652                           ;main.c: 171: 
   653  0769  3007               	movlw	7
   654  076A  0081               	movwf	1	;volatile
   655  076B                     l885:
   656                           
   657                           ;main.c: 172: void main(void)
   658  076B  302F               	movlw	47
   659  076C  0095               	movwf	21	;volatile
   660  076D                     l887:
   661                           
   662                           ;main.c: 173: {
   663  076D  3021               	movlw	33
   664  076E  008F               	movwf	15	;volatile
   665  076F                     l889:
   666                           
   667                           ;main.c: 174:   setup();
   668  076F  3004               	movlw	4
   669  0770  1283               	bcf	3,5	;RP0=0, select bank0
   670  0771  0090               	movwf	16	;volatile
   671  0772                     l891:
   672                           
   673                           ;main.c: 175:   while (1) Send_ID_Cycle();
   674  0772  307B               	movlw	123
   675  0773  0092               	movwf	18	;volatile
   676  0774                     l893:
   677                           
   678                           ;main.c: 176: }
   679  0774  0195               	clrf	21	;volatile
   680  0775  3080               	movlw	128
   681  0776  009F               	movwf	31	;volatile
   682  0777                     l895:
   683  0777  1683               	bsf	3,5	;RP0=1, select bank1
   684  0778  019F               	clrf	31	;volatile
   685  0779                     l897:
   686  0779  3017               	movlw	23
   687  077A  1283               	bcf	3,5	;RP0=0, select bank0
   688  077B  0099               	movwf	25	;volatile
   689  077C  019A               	clrf	26	;volatile
   690  077D                     l899:
   691  077D  3021               	movlw	33
   692  077E  1683               	bsf	3,5	;RP0=1, select bank1
   693  077F  0099               	movwf	25	;volatile
   694  0780                     l901:
   695  0780  3014               	movlw	20
   696  0781  1283               	bcf	3,5	;RP0=0, select bank0
   697  0782  0098               	movwf	24	;volatile
   698  0783  0185               	clrf	5	;volatile
   699  0784                     l903:
   700  0784  30EF               	movlw	239
   701  0785  1683               	bsf	3,5	;RP0=1, select bank1
   702  0786  0085               	movwf	5	;volatile
   703  0787                     l905:
   704  0787  30FA               	movlw	250
   705  0788  00F6               	movwf	delay_ms@delay
   706  0789  3000               	movlw	0
   707  078A  00F7               	movwf	delay_ms@delay+1
   708  078B  26B5               	fcall	_delay_ms
   709  078C                     l88:
   710  078C  0008               	return
   711  078D                     __end_of_setup:
   712                           
   713                           	psect	text2
   714  069D                     __ptext2:	
   715 ;; *************** function _Send_ID_Cycle *****************
   716 ;; Defined at:
   717 ;;		line 196 in file "main.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1
   731 ;;      Params:         0       0       0
   732 ;;      Locals:         0       0       0
   733 ;;      Temps:          0       0       0
   734 ;;      Totals:         0       0       0
   735 ;;Total ram usage:        0 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    4
   738 ;; This function calls:
   739 ;;		_KeyDown
   740 ;;		_KeyUp
   741 ;;		_Send_CW_Mess
   742 ;;		_delay_ms
   743 ;; This function is called by:
   744 ;;		_main
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           
   749                           ;psect for function _Send_ID_Cycle
   750  069D                     _Send_ID_Cycle:
   751  069D                     l907:	
   752                           ;incstack = 0
   753                           ; Regs used in _Send_ID_Cycle: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   754                           
   755  069D  3046               	movlw	70
   756  069E  1283               	bcf	3,5	;RP0=0, select bank0
   757  069F  00CB               	movwf	Send_CW_Mess@ditdelay
   758  06A0  3000               	movlw	0
   759  06A1  00CC               	movwf	Send_CW_Mess@ditdelay+1
   760  06A2  278D               	fcall	_Send_CW_Mess
   761  06A3                     l909:
   762  06A3  3090               	movlw	144
   763  06A4  00F6               	movwf	delay_ms@delay
   764  06A5  3001               	movlw	1
   765  06A6  00F7               	movwf	delay_ms@delay+1
   766  06A7  26B5               	fcall	_delay_ms
   767  06A8                     l911:
   768  06A8  2684               	fcall	_KeyDown
   769  06A9                     l913:
   770  06A9  3088               	movlw	136
   771  06AA  00F6               	movwf	delay_ms@delay
   772  06AB  3013               	movlw	19
   773  06AC  00F7               	movwf	delay_ms@delay+1
   774  06AD  26B5               	fcall	_delay_ms
   775  06AE                     l915:
   776  06AE  2687               	fcall	_KeyUp
   777  06AF                     l917:
   778  06AF  3090               	movlw	144
   779  06B0  00F6               	movwf	delay_ms@delay
   780  06B1  3001               	movlw	1
   781  06B2  00F7               	movwf	delay_ms@delay+1
   782  06B3  26B5               	fcall	_delay_ms
   783  06B4                     l91:
   784  06B4  0008               	return
   785  06B5                     __end_of_Send_ID_Cycle:
   786                           
   787                           	psect	text3
   788  078D                     __ptext3:	
   789 ;; *************** function _Send_CW_Mess *****************
   790 ;; Defined at:
   791 ;;		line 132 in file "main.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  ditdelay        2    5[BANK0 ] unsigned int 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  TxCharacter     1    8[BANK0 ] unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0   BANK1
   805 ;;      Params:         0       2       0
   806 ;;      Locals:         0       1       0
   807 ;;      Temps:          0       1       0
   808 ;;      Totals:         0       4       0
   809 ;;Total ram usage:        4 bytes
   810 ;; Hardware stack levels used:    1
   811 ;; Hardware stack levels required when called:    3
   812 ;; This function calls:
   813 ;;		_SendCharacter
   814 ;;		___wmul
   815 ;;		_delay_ms
   816 ;; This function is called by:
   817 ;;		_Send_ID_Cycle
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           
   822                           ;psect for function _Send_CW_Mess
   823  078D                     _Send_CW_Mess:
   824  078D                     l853:	
   825                           ;incstack = 0
   826                           ; Regs used in _Send_CW_Mess: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   827                           
   828                           
   829                           ;main.c: 132:     IOC = 0b00000000;;main.c: 133:     PIE1 = 0b00000000;;main.c: 134:    
      +                           OPTION_REG = 0b00000111;;main.c: 135:     WPU = 0b00101111;
   830  078D  1283               	bcf	3,5	;RP0=0, select bank0
   831  078E  01CF               	clrf	_TxStr_pos
   832                           
   833                           ;main.c: 136:     OSCCON = 0b00100001;
   834  078F  2FEC               	goto	l879
   835  0790                     l855:
   836                           
   837                           ;main.c: 137:     T1CON = 0b00000100;;main.c: 138:     T2CON = 0b01111011;
   838  0790  084F               	movf	_TxStr_pos,w
   839  0791  3E01               	addlw	low ((_Tx_String-__stringbase)| (0+32768))
   840  0792  0084               	movwf	4
   841  0793  2001               	fcall	stringdir
   842  0794  00CD               	movwf	??_Send_CW_Mess
   843  0795  084D               	movf	??_Send_CW_Mess,w
   844  0796  00CE               	movwf	Send_CW_Mess@TxCharacter
   845  0797                     l857:
   846                           
   847                           ;main.c: 140:     ADCON0 = 0b10000000;
   848  0797  3041               	movlw	65
   849  0798  024E               	subwf	Send_CW_Mess@TxCharacter,w
   850  0799  1C03               	skipc
   851  079A  2F9C               	goto	u241
   852  079B  2F9D               	goto	u240
   853  079C                     u241:
   854  079C  2FAE               	goto	l863
   855  079D                     u240:
   856  079D                     l859:
   857  079D  305B               	movlw	91
   858  079E  024E               	subwf	Send_CW_Mess@TxCharacter,w
   859  079F  1803               	skipnc
   860  07A0  2FA2               	goto	u251
   861  07A1  2FA3               	goto	u250
   862  07A2                     u251:
   863  07A2  2FAE               	goto	l863
   864  07A3                     u250:
   865  07A3                     l861:
   866                           
   867                           ;main.c: 141:     ANSEL = 0b00000000;;main.c: 143:     CMCON1 = 0b00000000;
   868  07A3  084C               	movf	Send_CW_Mess@ditdelay+1,w
   869  07A4  00C7               	movwf	SendCharacter@ditdelay+1
   870  07A5  084B               	movf	Send_CW_Mess@ditdelay,w
   871  07A6  00C6               	movwf	SendCharacter@ditdelay
   872  07A7  084E               	movf	Send_CW_Mess@TxCharacter,w
   873  07A8  3EDF               	addlw	(low ((_MorseCode| 0+191)))& (0+255)
   874  07A9  0084               	movwf	4
   875  07AA  1383               	bcf	3,7	;select IRP bank0
   876  07AB  0800               	movf	0,w
   877  07AC  26CE               	fcall	_SendCharacter
   878                           
   879                           ;main.c: 144:     VRCON = 0b00100001;
   880  07AD  2FE7               	goto	l877
   881  07AE                     l863:
   882  07AE  3030               	movlw	48
   883  07AF  024E               	subwf	Send_CW_Mess@TxCharacter,w
   884  07B0  1C03               	skipc
   885  07B1  2FB3               	goto	u261
   886  07B2  2FB4               	goto	u260
   887  07B3                     u261:
   888  07B3  2FC5               	goto	l869
   889  07B4                     u260:
   890  07B4                     l865:
   891  07B4  303A               	movlw	58
   892  07B5  024E               	subwf	Send_CW_Mess@TxCharacter,w
   893  07B6  1803               	skipnc
   894  07B7  2FB9               	goto	u271
   895  07B8  2FBA               	goto	u270
   896  07B9                     u271:
   897  07B9  2FC5               	goto	l869
   898  07BA                     u270:
   899  07BA                     l867:
   900                           
   901                           ;main.c: 146:     GPIO = 0b00000000;;main.c: 148: 
   902  07BA  084C               	movf	Send_CW_Mess@ditdelay+1,w
   903  07BB  00C7               	movwf	SendCharacter@ditdelay+1
   904  07BC  084B               	movf	Send_CW_Mess@ditdelay,w
   905  07BD  00C6               	movwf	SendCharacter@ditdelay
   906  07BE  084E               	movf	Send_CW_Mess@TxCharacter,w
   907  07BF  3E0A               	addlw	(low ((_Numbers| 0+208)))& (0+255)
   908  07C0  0084               	movwf	4
   909  07C1  1383               	bcf	3,7	;select IRP bank0
   910  07C2  0800               	movf	0,w
   911  07C3  26CE               	fcall	_SendCharacter
   912                           
   913                           ;main.c: 149: 
   914  07C4  2FE7               	goto	l877
   915  07C5                     l869:
   916  07C5  302F               	movlw	47
   917  07C6  064E               	xorwf	Send_CW_Mess@TxCharacter,w
   918  07C7  1D03               	btfss	3,2
   919  07C8  2FCA               	goto	u281
   920  07C9  2FCB               	goto	u280
   921  07CA                     u281:
   922  07CA  2FD2               	goto	l873
   923  07CB                     u280:
   924  07CB                     l871:
   925                           
   926                           ;main.c: 153: ;main.c: 154: 
   927  07CB  084C               	movf	Send_CW_Mess@ditdelay+1,w
   928  07CC  00C7               	movwf	SendCharacter@ditdelay+1
   929  07CD  084B               	movf	Send_CW_Mess@ditdelay,w
   930  07CE  00C6               	movwf	SendCharacter@ditdelay
   931  07CF  303C               	movlw	(low ((STR_37-__stringbase)| (0+32768)))& (0+255)
   932  07D0  26CE               	fcall	_SendCharacter
   933                           
   934                           ;main.c: 155:  delay_ms(250);
   935  07D1  2FE7               	goto	l877
   936  07D2                     l873:
   937  07D2  3020               	movlw	32
   938  07D3  064E               	xorwf	Send_CW_Mess@TxCharacter,w
   939  07D4  1D03               	btfss	3,2
   940  07D5  2FD7               	goto	u291
   941  07D6  2FD8               	goto	u290
   942  07D7                     u291:
   943  07D7  2FE7               	goto	l80
   944  07D8                     u290:
   945  07D8                     l875:
   946                           
   947                           ;main.c: 157: ;main.c: 158: 
   948  07D8  084C               	movf	Send_CW_Mess@ditdelay+1,w
   949  07D9  00F1               	movwf	___wmul@multiplier+1
   950  07DA  084B               	movf	Send_CW_Mess@ditdelay,w
   951  07DB  00F0               	movwf	___wmul@multiplier
   952  07DC  3003               	movlw	3
   953  07DD  00F2               	movwf	___wmul@multiplicand
   954  07DE  3000               	movlw	0
   955  07DF  00F3               	movwf	___wmul@multiplicand+1
   956  07E0  26F0               	fcall	___wmul
   957  07E1  0871               	movf	?___wmul+1,w
   958  07E2  00F7               	movwf	delay_ms@delay+1
   959  07E3  0870               	movf	?___wmul,w
   960  07E4  00F6               	movwf	delay_ms@delay
   961  07E5  26B5               	fcall	_delay_ms
   962  07E6  2FE7               	goto	l877
   963  07E7                     l80:
   964  07E7                     l877:
   965                           
   966                           ;main.c: 160: {
   967  07E7  3001               	movlw	1
   968  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   969  07E9  00CD               	movwf	??_Send_CW_Mess
   970  07EA  084D               	movf	??_Send_CW_Mess,w
   971  07EB  07CF               	addwf	_TxStr_pos,f
   972  07EC                     l879:
   973                           
   974                           ;main.c: 136:     OSCCON = 0b00100001;
   975  07EC  3017               	movlw	23
   976  07ED  024F               	subwf	_TxStr_pos,w
   977  07EE  1C03               	skipc
   978  07EF  2FF1               	goto	u301
   979  07F0  2FF2               	goto	u300
   980  07F1                     u301:
   981  07F1  2F90               	goto	l855
   982  07F2                     u300:
   983  07F2                     l85:
   984  07F2  0008               	return
   985  07F3                     __end_of_Send_CW_Mess:
   986                           
   987                           	psect	text4
   988  06CE                     __ptext4:	
   989 ;; *************** function _SendCharacter *****************
   990 ;; Defined at:
   991 ;;		line 120 in file "main.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  Character       1    wreg     PTR unsigned char 
   994 ;;		 -> STR_37(6), STR_36(6), STR_35(6), STR_34(6), 
   995 ;;		 -> STR_33(6), STR_32(6), STR_31(6), STR_30(6), 
   996 ;;		 -> STR_29(6), STR_28(6), STR_27(6), STR_26(5), 
   997 ;;		 -> STR_25(5), STR_24(5), STR_23(4), STR_22(5), 
   998 ;;		 -> STR_21(4), STR_20(2), STR_19(4), STR_18(4), 
   999 ;;		 -> STR_17(5), STR_16(5), STR_15(4), STR_14(3), 
  1000 ;;		 -> STR_13(3), STR_12(5), STR_11(4), STR_10(5), 
  1001 ;;		 -> STR_9(3), STR_8(5), STR_7(4), STR_6(5), 
  1002 ;;		 -> STR_5(2), STR_4(4), STR_3(5), STR_2(5), 
  1003 ;;		 -> STR_1(3), 
  1004 ;;  ditdelay        2    0[BANK0 ] unsigned int 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  Character       1    4[BANK0 ] PTR unsigned char 
  1007 ;;		 -> STR_37(6), STR_36(6), STR_35(6), STR_34(6), 
  1008 ;;		 -> STR_33(6), STR_32(6), STR_31(6), STR_30(6), 
  1009 ;;		 -> STR_29(6), STR_28(6), STR_27(6), STR_26(5), 
  1010 ;;		 -> STR_25(5), STR_24(5), STR_23(4), STR_22(5), 
  1011 ;;		 -> STR_21(4), STR_20(2), STR_19(4), STR_18(4), 
  1012 ;;		 -> STR_17(5), STR_16(5), STR_15(4), STR_14(3), 
  1013 ;;		 -> STR_13(3), STR_12(5), STR_11(4), STR_10(5), 
  1014 ;;		 -> STR_9(3), STR_8(5), STR_7(4), STR_6(5), 
  1015 ;;		 -> STR_5(2), STR_4(4), STR_3(5), STR_2(5), 
  1016 ;;		 -> STR_1(3), 
  1017 ;;  i               1    3[BANK0 ] unsigned char 
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      void 
  1020 ;; Registers used:
  1021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMMON   BANK0   BANK1
  1027 ;;      Params:         0       2       0
  1028 ;;      Locals:         0       2       0
  1029 ;;      Temps:          0       1       0
  1030 ;;      Totals:         0       5       0
  1031 ;;Total ram usage:        5 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; Hardware stack levels required when called:    2
  1034 ;; This function calls:
  1035 ;;		_SendDitDah
  1036 ;;		_delay_ms
  1037 ;; This function is called by:
  1038 ;;		_Send_CW_Mess
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           
  1043                           ;psect for function _SendCharacter
  1044  06CE                     _SendCharacter:
  1045                           
  1046                           ;incstack = 0
  1047                           ; Regs used in _SendCharacter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1048                           ;SendCharacter@Character stored from wreg
  1049  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  1050  06CF  00CA               	movwf	SendCharacter@Character
  1051  06D0                     l843:
  1052                           
  1053                           ;main.c: 120:     {;main.c: 121:       delay_ms(ditdelay*3);;main.c: 122:     }
  1054  06D0  01C9               	clrf	SendCharacter@i
  1055                           
  1056                           ;main.c: 123:     TxStr_pos++;
  1057  06D1  2EE0               	goto	l849
  1058  06D2                     l845:
  1059                           
  1060                           ;main.c: 124:   };main.c: 125: }
  1061  06D2  0847               	movf	SendCharacter@ditdelay+1,w
  1062  06D3  00FC               	movwf	SendDitDah@ditdelay+1
  1063  06D4  0846               	movf	SendCharacter@ditdelay,w
  1064  06D5  00FB               	movwf	SendDitDah@ditdelay
  1065  06D6  0849               	movf	SendCharacter@i,w
  1066  06D7  074A               	addwf	SendCharacter@Character,w
  1067  06D8  0084               	movwf	4
  1068  06D9  2001               	fcall	stringdir
  1069  06DA  273B               	fcall	_SendDitDah
  1070  06DB                     l847:
  1071                           
  1072                           ;main.c: 126: 
  1073  06DB  3001               	movlw	1
  1074  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  1075  06DD  00C8               	movwf	??_SendCharacter
  1076  06DE  0848               	movf	??_SendCharacter,w
  1077  06DF  07C9               	addwf	SendCharacter@i,f
  1078  06E0                     l849:
  1079                           
  1080                           ;main.c: 123:     TxStr_pos++;
  1081  06E0  0849               	movf	SendCharacter@i,w
  1082  06E1  074A               	addwf	SendCharacter@Character,w
  1083  06E2  0084               	movwf	4
  1084  06E3  2001               	fcall	stringdir
  1085  06E4  3A00               	xorlw	0
  1086  06E5  1D03               	skipz
  1087  06E6  2EE8               	goto	u231
  1088  06E7  2EE9               	goto	u230
  1089  06E8                     u231:
  1090  06E8  2ED2               	goto	l845
  1091  06E9                     u230:
  1092  06E9                     l851:
  1093                           
  1094                           ;main.c: 128: void setup()
  1095  06E9  1003               	clrc
  1096  06EA  0D46               	rlf	SendCharacter@ditdelay,w
  1097  06EB  00F6               	movwf	delay_ms@delay
  1098  06EC  0D47               	rlf	SendCharacter@ditdelay+1,w
  1099  06ED  00F7               	movwf	delay_ms@delay+1
  1100  06EE  26B5               	fcall	_delay_ms
  1101  06EF                     l72:
  1102  06EF  0008               	return
  1103  06F0                     __end_of_SendCharacter:
  1104                           
  1105                           	psect	text5
  1106  073B                     __ptext5:	
  1107 ;; *************** function _SendDitDah *****************
  1108 ;; Defined at:
  1109 ;;		line 110 in file "main.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  DitDah_data     1    wreg     unsigned char 
  1112 ;;  ditdelay        2   11[COMMON] unsigned int 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  DitDah_data     1   13[COMMON] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0, pclath, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMMON   BANK0   BANK1
  1124 ;;      Params:         2       0       0
  1125 ;;      Locals:         1       0       0
  1126 ;;      Temps:          0       0       0
  1127 ;;      Totals:         3       0       0
  1128 ;;Total ram usage:        3 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; Hardware stack levels required when called:    1
  1131 ;; This function calls:
  1132 ;;		_KeyDown
  1133 ;;		_KeyUp
  1134 ;;		___wmul
  1135 ;;		_delay_ms
  1136 ;; This function is called by:
  1137 ;;		_SendCharacter
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           
  1142                           ;psect for function _SendDitDah
  1143  073B                     _SendDitDah:
  1144                           
  1145                           ;incstack = 0
  1146                           ; Regs used in _SendDitDah: [wreg+status,2+status,0+pclath+cstack]
  1147                           ;SendDitDah@DitDah_data stored from wreg
  1148  073B  00FD               	movwf	SendDitDah@DitDah_data
  1149  073C                     l829:
  1150                           
  1151                           ;main.c: 110: ;main.c: 111:       SendCharacter(Numbers[TxCharacter - '0'],ditdelay);;ma
      +                          in.c: 112:     }
  1152  073C  2684               	fcall	_KeyDown
  1153  073D                     l831:
  1154                           
  1155                           ;main.c: 113: 
  1156  073D  302E               	movlw	46
  1157  073E  067D               	xorwf	SendDitDah@DitDah_data,w
  1158  073F  1D03               	btfss	3,2
  1159  0740  2F42               	goto	u211
  1160  0741  2F43               	goto	u210
  1161  0742                     u211:
  1162  0742  2F49               	goto	l835
  1163  0743                     u210:
  1164  0743                     l833:
  1165  0743  087C               	movf	SendDitDah@ditdelay+1,w
  1166  0744  00F7               	movwf	delay_ms@delay+1
  1167  0745  087B               	movf	SendDitDah@ditdelay,w
  1168  0746  00F6               	movwf	delay_ms@delay
  1169  0747  26B5               	fcall	_delay_ms
  1170  0748  2F5D               	goto	l839
  1171  0749                     l835:
  1172  0749  302D               	movlw	45
  1173  074A  067D               	xorwf	SendDitDah@DitDah_data,w
  1174  074B  1D03               	btfss	3,2
  1175  074C  2F4E               	goto	u221
  1176  074D  2F4F               	goto	u220
  1177  074E                     u221:
  1178  074E  2F5D               	goto	l839
  1179  074F                     u220:
  1180  074F                     l837:
  1181  074F  087C               	movf	SendDitDah@ditdelay+1,w
  1182  0750  00F1               	movwf	___wmul@multiplier+1
  1183  0751  087B               	movf	SendDitDah@ditdelay,w
  1184  0752  00F0               	movwf	___wmul@multiplier
  1185  0753  3003               	movlw	3
  1186  0754  00F2               	movwf	___wmul@multiplicand
  1187  0755  3000               	movlw	0
  1188  0756  00F3               	movwf	___wmul@multiplicand+1
  1189  0757  26F0               	fcall	___wmul
  1190  0758  0871               	movf	?___wmul+1,w
  1191  0759  00F7               	movwf	delay_ms@delay+1
  1192  075A  0870               	movf	?___wmul,w
  1193  075B  00F6               	movwf	delay_ms@delay
  1194  075C  26B5               	fcall	_delay_ms
  1195  075D                     l839:
  1196                           
  1197                           ;main.c: 115: 
  1198  075D  2687               	fcall	_KeyUp
  1199  075E                     l841:
  1200                           
  1201                           ;main.c: 116:     {
  1202  075E  087C               	movf	SendDitDah@ditdelay+1,w
  1203  075F  00F7               	movwf	delay_ms@delay+1
  1204  0760  087B               	movf	SendDitDah@ditdelay,w
  1205  0761  00F6               	movwf	delay_ms@delay
  1206  0762  26B5               	fcall	_delay_ms
  1207  0763                     l66:
  1208  0763  0008               	return
  1209  0764                     __end_of_SendDitDah:
  1210                           
  1211                           	psect	text6
  1212  06B5                     __ptext6:	
  1213 ;; *************** function _delay_ms *****************
  1214 ;; Defined at:
  1215 ;;		line 92 in file "main.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  delay           2    6[COMMON] unsigned int 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  i               2    9[COMMON] unsigned int 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1
  1229 ;;      Params:         2       0       0
  1230 ;;      Locals:         2       0       0
  1231 ;;      Temps:          1       0       0
  1232 ;;      Totals:         5       0       0
  1233 ;;Total ram usage:        5 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; This function calls:
  1236 ;;		Nothing
  1237 ;; This function is called by:
  1238 ;;		_SendDitDah
  1239 ;;		_SendCharacter
  1240 ;;		_Send_CW_Mess
  1241 ;;		_setup
  1242 ;;		_Send_ID_Cycle
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           
  1247                           ;psect for function _delay_ms
  1248  06B5                     _delay_ms:
  1249  06B5                     l807:	
  1250                           ;incstack = 0
  1251                           ; Regs used in _delay_ms: [wreg+status,2]
  1252                           
  1253                           
  1254                           ;main.c: 92: };main.c: 93: ;main.c: 94: 
  1255  06B5  01F9               	clrf	delay_ms@i
  1256  06B6  01FA               	clrf	delay_ms@i+1
  1257  06B7  2EC3               	goto	l51
  1258  06B8                     l809:
  1259  06B8  3014               	movlw	20
  1260  06B9  00F8               	movwf	??_delay_ms
  1261  06BA                     u317:
  1262  06BA  0BF8               	decfsz	??_delay_ms,f
  1263  06BB  2EBA               	goto	u317
  1264  06BC  0000               	nop
  1265  06BD  3001               	movlw	1
  1266  06BE  07F9               	addwf	delay_ms@i,f
  1267  06BF  1803               	skipnc
  1268  06C0  0AFA               	incf	delay_ms@i+1,f
  1269  06C1  3000               	movlw	0
  1270  06C2  07FA               	addwf	delay_ms@i+1,f
  1271  06C3                     l51:
  1272  06C3  0877               	movf	delay_ms@delay+1,w
  1273  06C4  027A               	subwf	delay_ms@i+1,w
  1274  06C5  1D03               	skipz
  1275  06C6  2EC9               	goto	u165
  1276  06C7  0876               	movf	delay_ms@delay,w
  1277  06C8  0279               	subwf	delay_ms@i,w
  1278  06C9                     u165:
  1279  06C9  1C03               	skipc
  1280  06CA  2ECC               	goto	u161
  1281  06CB  2ECD               	goto	u160
  1282  06CC                     u161:
  1283  06CC  2EB8               	goto	l809
  1284  06CD                     u160:
  1285  06CD                     l54:
  1286  06CD  0008               	return
  1287  06CE                     __end_of_delay_ms:
  1288                           
  1289                           	psect	text7
  1290  06F0                     __ptext7:	
  1291 ;; *************** function ___wmul *****************
  1292 ;; Defined at:
  1293 ;;		line 15 in file "/opt/microchip/xc8/v2.31/pic/sources/c90/common/Umul16.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;  multiplier      2    0[COMMON] unsigned int 
  1296 ;;  multiplicand    2    2[COMMON] unsigned int 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  product         2    4[COMMON] unsigned int 
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  2    0[COMMON] unsigned int 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2, status,0
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1
  1308 ;;      Params:         4       0       0
  1309 ;;      Locals:         2       0       0
  1310 ;;      Temps:          0       0       0
  1311 ;;      Totals:         6       0       0
  1312 ;;Total ram usage:        6 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_SendDitDah
  1318 ;;		_Send_CW_Mess
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           
  1323                           ;psect for function ___wmul
  1324  06F0                     ___wmul:
  1325  06F0                     l815:	
  1326                           ;incstack = 0
  1327                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1328                           
  1329  06F0  01F4               	clrf	___wmul@product
  1330  06F1  01F5               	clrf	___wmul@product+1
  1331  06F2                     l817:
  1332  06F2  1C70               	btfss	___wmul@multiplier,0
  1333  06F3  2EF5               	goto	u171
  1334  06F4  2EF6               	goto	u170
  1335  06F5                     u171:
  1336  06F5  2EFC               	goto	l185
  1337  06F6                     u170:
  1338  06F6                     l819:
  1339  06F6  0872               	movf	___wmul@multiplicand,w
  1340  06F7  07F4               	addwf	___wmul@product,f
  1341  06F8  1803               	skipnc
  1342  06F9  0AF5               	incf	___wmul@product+1,f
  1343  06FA  0873               	movf	___wmul@multiplicand+1,w
  1344  06FB  07F5               	addwf	___wmul@product+1,f
  1345  06FC                     l185:
  1346  06FC  3001               	movlw	1
  1347  06FD                     u185:
  1348  06FD  1003               	clrc
  1349  06FE  0DF2               	rlf	___wmul@multiplicand,f
  1350  06FF  0DF3               	rlf	___wmul@multiplicand+1,f
  1351  0700  3EFF               	addlw	-1
  1352  0701  1D03               	skipz
  1353  0702  2EFD               	goto	u185
  1354  0703                     l821:
  1355  0703  3001               	movlw	1
  1356  0704                     u195:
  1357  0704  1003               	clrc
  1358  0705  0CF1               	rrf	___wmul@multiplier+1,f
  1359  0706  0CF0               	rrf	___wmul@multiplier,f
  1360  0707  3EFF               	addlw	-1
  1361  0708  1D03               	skipz
  1362  0709  2F04               	goto	u195
  1363  070A                     l823:
  1364  070A  0870               	movf	___wmul@multiplier,w
  1365  070B  0471               	iorwf	___wmul@multiplier+1,w
  1366  070C  1D03               	btfss	3,2
  1367  070D  2F0F               	goto	u201
  1368  070E  2F10               	goto	u200
  1369  070F                     u201:
  1370  070F  2EF2               	goto	l817
  1371  0710                     u200:
  1372  0710                     l825:
  1373  0710  0875               	movf	___wmul@product+1,w
  1374  0711  00F1               	movwf	?___wmul+1
  1375  0712  0874               	movf	___wmul@product,w
  1376  0713  00F0               	movwf	?___wmul
  1377  0714                     l187:
  1378  0714  0008               	return
  1379  0715                     __end_of___wmul:
  1380                           
  1381                           	psect	text8
  1382  0687                     __ptext8:	
  1383 ;; *************** function _KeyUp *****************
  1384 ;; Defined at:
  1385 ;;		line 104 in file "main.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		None
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1
  1399 ;;      Params:         0       0       0
  1400 ;;      Locals:         0       0       0
  1401 ;;      Temps:          0       0       0
  1402 ;;      Totals:         0       0       0
  1403 ;;Total ram usage:        0 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_SendDitDah
  1409 ;;		_Send_ID_Cycle
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           
  1414                           ;psect for function _KeyUp
  1415  0687                     _KeyUp:
  1416  0687                     l813:	
  1417                           ;incstack = 0
  1418                           ; Regs used in _KeyUp: []
  1419                           
  1420                           
  1421                           ;main.c: 106:       SendCharacter(MorseCode[TxCharacter - 'A'],ditdelay);
  1422  0687  1283               	bcf	3,5	;RP0=0, select bank0
  1423  0688  1205               	bcf	5,4	;volatile
  1424  0689                     l60:
  1425  0689  0008               	return
  1426  068A                     __end_of_KeyUp:
  1427                           
  1428                           	psect	text9
  1429  0684                     __ptext9:	
  1430 ;; *************** function _KeyDown *****************
  1431 ;; Defined at:
  1432 ;;		line 98 in file "main.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		None
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1
  1446 ;;      Params:         0       0       0
  1447 ;;      Locals:         0       0       0
  1448 ;;      Temps:          0       0       0
  1449 ;;      Totals:         0       0       0
  1450 ;;Total ram usage:        0 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_SendDitDah
  1456 ;;		_Send_ID_Cycle
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _KeyDown
  1462  0684                     _KeyDown:
  1463  0684                     l811:	
  1464                           ;incstack = 0
  1465                           ; Regs used in _KeyDown: []
  1466                           
  1467                           
  1468                           ;main.c: 100:   {
  1469  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1470  0685  1605               	bsf	5,4	;volatile
  1471  0686                     l57:
  1472  0686  0008               	return
  1473  0687                     __end_of_KeyDown:
  1474  007E                     btemp	set	126	;btemp
  1475  007E                     wtemp0	set	126
  1476                           
  1477                           	psect	config
  1478                           
  1479                           ;Config register CONFIG @ 0x2007
  1480                           ;	Oscillator Selection bits
  1481                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O functio
      +                          n on RA5/OSC1/CLKIN
  1482                           ;	Watchdog Timer Enable bit
  1483                           ;	WDTE = OFF, WDT disabled
  1484                           ;	Power-up Timer Enable bit
  1485                           ;	PWRTE = OFF, PWRT disabled
  1486                           ;	MCLR Pin Function Select bit
  1487                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
  1488                           ;	Code Protection bit
  1489                           ;	CP = OFF, Program memory code protection is disabled
  1490                           ;	Data Code Protection bit
  1491                           ;	CPD = OFF, Data memory code protection is disabled
  1492                           ;	Brown Out Detect
  1493                           ;	BOREN = OFF, BOR disabled
  1494                           ;	Internal External Switchover bit
  1495                           ;	IESO = OFF, Internal External Switchover mode is disabled
  1496                           ;	Fail-Safe Clock Monitor Enabled bit
  1497                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1498  2007                     	org	8199
  1499  2007  30D4               	dw	12500

Data Sizes:
    Strings     96
    Constant    23
    Data        38
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      9      48
    BANK1            32      0       0

Pointer List with Targets:

    Send_CW_Mess$728	PTR unsigned char  size(1) Largest target is 6
		 -> STR_36(CODE[6]), STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), 
		 -> STR_32(CODE[6]), STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), 
		 -> STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[5]), STR_25(CODE[5]), 
		 -> STR_24(CODE[5]), STR_23(CODE[4]), STR_22(CODE[5]), STR_21(CODE[4]), 
		 -> STR_20(CODE[2]), STR_19(CODE[4]), STR_18(CODE[4]), STR_17(CODE[5]), 
		 -> STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[3]), STR_13(CODE[3]), 
		 -> STR_12(CODE[5]), STR_11(CODE[4]), STR_10(CODE[5]), STR_9(CODE[3]), 
		 -> STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[2]), 
		 -> STR_4(CODE[4]), STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[3]), 

    SendCharacter@Character	PTR unsigned char  size(1) Largest target is 6
		 -> STR_37(CODE[6]), STR_36(CODE[6]), STR_35(CODE[6]), STR_34(CODE[6]), 
		 -> STR_33(CODE[6]), STR_32(CODE[6]), STR_31(CODE[6]), STR_30(CODE[6]), 
		 -> STR_29(CODE[6]), STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[5]), 
		 -> STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[4]), STR_22(CODE[5]), 
		 -> STR_21(CODE[4]), STR_20(CODE[2]), STR_19(CODE[4]), STR_18(CODE[4]), 
		 -> STR_17(CODE[5]), STR_16(CODE[5]), STR_15(CODE[4]), STR_14(CODE[3]), 
		 -> STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[4]), STR_10(CODE[5]), 
		 -> STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[4]), STR_6(CODE[5]), 
		 -> STR_5(CODE[2]), STR_4(CODE[4]), STR_3(CODE[5]), STR_2(CODE[5]), 
		 -> STR_1(CODE[3]), 

    Numbers	PTR const unsigned char [10] size(1) Largest target is 6
		 -> STR_36(CODE[6]), STR_35(CODE[6]), STR_34(CODE[6]), STR_33(CODE[6]), 
		 -> STR_32(CODE[6]), STR_31(CODE[6]), STR_30(CODE[6]), STR_29(CODE[6]), 
		 -> STR_28(CODE[6]), STR_27(CODE[6]), 

    MorseCode	PTR const unsigned char [26] size(1) Largest target is 5
		 -> STR_26(CODE[5]), STR_25(CODE[5]), STR_24(CODE[5]), STR_23(CODE[4]), 
		 -> STR_22(CODE[5]), STR_21(CODE[4]), STR_20(CODE[2]), STR_19(CODE[4]), 
		 -> STR_18(CODE[4]), STR_17(CODE[5]), STR_16(CODE[5]), STR_15(CODE[4]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[4]), 
		 -> STR_10(CODE[5]), STR_9(CODE[3]), STR_8(CODE[5]), STR_7(CODE[4]), 
		 -> STR_6(CODE[5]), STR_5(CODE[2]), STR_4(CODE[4]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _setup->_delay_ms
    _SendCharacter->_SendDitDah
    _SendDitDah->_delay_ms
    _delay_ms->___wmul

Critical Paths under _main in BANK0

    _Send_ID_Cycle->_Send_CW_Mess
    _Send_CW_Mess->_SendCharacter

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5830
                      _Send_ID_Cycle
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     730
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _Send_ID_Cycle                                        0     0      0    5100
                            _KeyDown
                              _KeyUp
                       _Send_CW_Mess
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _Send_CW_Mess                                         4     2      2    4370
                                              5 BANK0      4     2      2
                      _SendCharacter
                             ___wmul
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _SendCharacter                                        5     3      2    2703
                                              0 BANK0      5     3      2
                         _SendDitDah
                           _delay_ms
 ---------------------------------------------------------------------------------
 (4) _SendDitDah                                           3     1      2    1512
                                             11 COMMON     3     1      2
                            _KeyDown
                              _KeyUp
                             ___wmul
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     730
                                              6 COMMON     5     3      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     596
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) _KeyUp                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _KeyDown                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Send_ID_Cycle
     _KeyDown
     _KeyUp
     _Send_CW_Mess
       _SendCharacter
         _SendDitDah
           _KeyDown
           _KeyUp
           ___wmul
           _delay_ms
             ___wmul (ARG)
         _delay_ms
           ___wmul (ARG)
       ___wmul
       _delay_ms
         ___wmul (ARG)
     _delay_ms
       ___wmul (ARG)
   _setup
     _delay_ms
       ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK1               20      0       0       5        0.0%
BITBANK1            20      0       0       7        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      9      30       4       60.0%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3E       8        0.0%
ABS                  0      0      3E       6        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Aug 24 09:54:35 2023

                      pc 0002                       l51 06C3                       l60 0689  
                     l54 06CD                       l72 06EF                       l80 07E7  
                     l57 0686                       l66 0763                       l91 06B4  
                     l85 07F2                       l88 078C                       fsr 0004  
    ___wmul@multiplicand 0072                      l185 06FC                      l187 0714  
                    l811 0684                      l813 0687                      l821 0703  
                    l901 0780                      l823 070A                      l815 06F0  
                    l807 06B5                      l831 073D                      l911 06A8  
                    l903 0784                      l825 0710                      l817 06F2  
                    l809 06B8                      l841 075E                      l833 0743  
                    l913 06A9                      l905 0787                      l921 068B  
                    l819 06F6                      l835 0749                      l851 06E9  
                    l843 06D0                      l915 06AE                      l907 069D  
                    l837 074F                      l829 073C                      l845 06D2  
                    l861 07A3                      l853 078D                      l917 06AF  
                    l909 06A3                      l839 075D                      l847 06DB  
                    l871 07CB                      l863 07AE                      l855 0790  
                    l919 068A                      l849 06E0                      l873 07D2  
                    l865 07B4                      l857 0797                      l881 0764  
                    l875 07D8                      l867 07BA                      l859 079D  
                    l891 0772                      l883 0769                      l869 07C5  
                    l877 07E7                      l893 0774                      l885 076B  
                    l879 07EC                      l895 0777                      l887 076D  
                    _GP4 002C                      l897 0779                      l889 076F  
                    l899 077D                      _IOC 0096                      u200 0710  
                    u201 070F                      u210 0743                      u211 0742  
                    u220 074F                      u300 07F2                      u221 074E  
                    u301 07F1                      u230 06E9                      u231 06E8  
                    u160 06CD                      u240 079D                      u161 06CC  
                    u241 079C                      u170 06F6                      u250 07A3  
                    u171 06F5                      u251 07A2                      u260 07B4  
                    u165 06C9                      u317 06BA                      u261 07B3  
                    u270 07BA                      u271 07B9                      u280 07CB  
                    u185 06FD                      u281 07CA                      u290 07D8  
                    u195 0704                      u291 07D7                      _WPU 0095  
                    fsr0 0004                      indf 0000                     STR_1 0067  
                   STR_2 004F                     STR_3 0074                     STR_4 004A  
                   STR_5 0040                     STR_6 0043                     STR_7 003E  
                   STR_8 0055                     STR_9 004B                     _GPIO 0005  
                   _PIE1 008C                     _PIR1 000C                     _main 068A  
                   btemp 007E                     start 0000          __end_of_KeyDown 0687  
                  ?_main 0070                    STR_10 002B                    STR_11 0066  
                  STR_20 0022                    STR_12 0079                    STR_21 006B  
                  STR_13 0021                    STR_30 0030                    STR_22 0037  
                  STR_14 003F                    STR_31 0036                    STR_23 0061  
                  STR_15 0020                    STR_32 005A                    STR_24 006A  
                  STR_16 006F                    STR_33 0054                    STR_25 0060  
                  STR_17 0065                    STR_34 004E                    STR_26 0049  
                  STR_18 0075                    STR_35 0048                    STR_27 001E  
                  STR_19 0050                    STR_36 003C                    STR_28 0024  
                  STR_37 0042                    STR_29 002A                    _ANSEL 009F  
                  _T1CON 0010                    _T2CON 0012                    _VRCON 0099  
                  _KeyUp 0687                    _setup 0764                    pclath 000A  
                  status 0003                    wtemp0 007E              _DitDuration 0044  
        __initialization 07F3             __end_of_main 068E                   ??_main 007E  
                 ?_KeyUp 0070               _SendDitDah 073B                   _ADCON0 001F  
                 _CMCON0 0019                   _CMCON1 001A                   ?_setup 0070  
                 _OSCCON 008F                   _WDTCON 0018                   _TRISIO 0085  
              ??_KeyDown 0070         __end_of_delay_ms 06CE            ?_Send_CW_Mess 004B  
                 ___wmul 06F0   __size_of_SendCharacter 0022   __size_of_Send_ID_Cycle 0018  
Send_CW_Mess@TxCharacter 004E  __end_of__initialization 07FE    SendCharacter@ditdelay 0046  
          __end_of_KeyUp 068A           ??_Send_CW_Mess 004D           __pcstackCOMMON 0070  
           __pidataBANK0 0715            __end_of_setup 078D                  ??_KeyUp 0070  
            ?_SendDitDah 007B                  ??_setup 007B               __pbssBANK0 004F  
   Send_CW_Mess@ditdelay 004B            _SendCharacter 06CE               __pmaintext 068A  
      __end_of_Tx_String 001E            _Send_ID_Cycle 069D                  ?___wmul 0070  
                _CCP1CON 0015   SendCharacter@Character 004A                ?_delay_ms 0076  
             __stringtab 0001                  _KeyDown 0684           ?_SendCharacter 0046  
                _Numbers 003A           ?_Send_ID_Cycle 0070      __size_of_SendDitDah 0029  
        __size_of___wmul 0025    SendDitDah@DitDah_data 007D                  __ptext1 0764  
                __ptext2 069D                  __ptext3 078D                  __ptext4 06CE  
                __ptext5 073B                  __ptext6 06B5                  __ptext7 06F0  
                __ptext8 0687                  __ptext9 0684               ??_delay_ms 0078  
   __end_of_Send_CW_Mess 07F3     end_of_initialization 07FE          ??_SendCharacter 0048  
        ??_Send_ID_Cycle 007E            delay_ms@delay 0076           __end_of___wmul 0715  
    start_initialization 07F3             ??_SendDitDah 007D                _MorseCode 0020  
               ??___wmul 0074               init_fetch0 068E       __end_of_SendDitDah 0764  
            __pdataBANK0 0020                _Tx_String 0007                _TxStr_pos 004F  
  __size_of_Send_CW_Mess 0066                ___latbits 0000            __pcstackBANK0 0046  
      __size_of_delay_ms 0019                 ?_KeyDown 0070             _Send_CW_Mess 078D  
              __pstrings 0001           __size_of_KeyUp 0003           __size_of_setup 0029  
         ___wmul@product 0074                delay_ms@i 0079              __stringbase 0006  
      ___wmul@multiplier 0070         __size_of_KeyDown 0003       __end_of__stringtab 0007  
               _delay_ms 06B5            __size_of_main 0004    __end_of_SendCharacter 06F0  
  __end_of_Send_ID_Cycle 06B5           SendCharacter@i 0049       SendDitDah@ditdelay 007B  
               init_ram0 0692                stringcode 0001               _OPTION_REG 0081  
               stringdir 0001                 stringtab 0001  
